#!/usr/bin/php
<?php
/* USAGE
   php spelunky [options]

   chmod 700 spelunky; then:
   ./spelunky [options]

   or for a really fancy time,
   ln -s /path/to/spelunky /usr/bin/spelunky; then:
   spelunky [options]
 */

echo "\n";
if ($argc == 1) {
	if ($argv[0] == "spelunky") $argv[0] = "php spelunky"; // this looks silly but I assure you it makes sense
	else if ($argv[0] == "/usr/bin/spelunky") $argv[0] = "spelunky";

	echo "\t\033[1mUSAGE:\033[0m\n\t" . $argv[0] . " [OPTION] [-d date, --date=date]\n\n";
	echo "\tFor a list of options, use the -h or --help flag\n";
} else if (in_array($argv[1],array("-h","--help","-help","-?"))) {
	echo "\t\033[1mAVAILABLE COMMANDS:\033[0m\n\n";
	echo "\t\t-g, --geeklist\t\tForce update to the geeklist\n\n";
	echo "\t\t-h, --help\t\tDisplay this menu\n\n";
	echo "\t\t-i, --insert\t\tManually insert a daily score\n\n";
	echo "\t\t-u, --update\t\tForce update (will also update geeklist)\n\n";
	echo "\tOptionally,\n\n";
	echo "\t\t-d [date], --date=[date]\n\n";
	echo "\tThis will specify the date to select. Format can be any accepted by PHP's strtotime() (ie \"2014-02-12\", \"tomorrow\", \"January 4\"). Place quotes around dates with spaces.\n";
} else { // actual commands
	require('functions.php');
	if (@$argv[2] == "-d") $date = $argv[3];
	else if (@preg_match("/^--date=['\"]?(.+)['\"]?$/",$argv[2],$matches)) $date = $matches[1];
	else $date = NULL;

	$lb = new Leaderboard($date);

	// NOTE: since this only uses saved data, it will never add a comment. To use fresh data, run with -u
	if (in_array($argv[1],array("-g","--geeklist"))) {
		echo "Updating geeklist...\n";
		$lb->update_geeklist();
		echo "Updated.\n";

	} else if (in_array($argv[1],array("-u","--update"))) {
		echo "Forcing update...\n";
		$lb->update();
		echo "All shiny, cap'n\n"; // turn this off or pipe the output into /dev/null

	} else if (in_array($argv[1],array("-p","--print"))) {
		echo $lb->format("text");

	} else if (in_array($argv[1],array("-i","--insert"))) {
		while (@!$player['steamid']) {
			echo "Player (case insensitive): ";
			$input = strtolower(trim(fread(STDIN,80)));

			$query = "SELECT steamid FROM spelunky_players WHERE lower(name)='" . $input . "'";
			$result = $db->query($query);
			$row = $result->fetch_assoc();
			if (!$row) echo "\033[1mError:\033[0m Player not found\n";
			else $player['steamid'] = $row['steamid'];
		}

		while (@!$player['leaderboard_id']) {
			echo "Date: ";
			$input = trim(fread(STDIN,80));

			$query = "SELECT leaderboard_id FROM spelunky_games WHERE date='" . date("Y-m-d",strtotime($input)) . "'";
			$result = $db->query($query);
			$row = $result->fetch_assoc();
			if (!$row) echo "\033[1mError:\033[0m No leaderboard for that date\n";
			else $player['leaderboard_id'] = $row['leaderboard_id'];
		}
		
		while (@!$player['score']) {
			echo "Score: $";
			$player['score'] = preg_replace("/,/","",trim(fread(STDIN,80)));
		}
		
		while (@!$player['level']) {
			echo "Level (5, not 2-1): ";
			$input = trim(fread(STDIN,80));
			if (!$input || !preg_match("/^\d{1,2}$/",$input) || $input < 1 || $input > 20) echo "\033[1mError:\033[0m Not a valid level. Enter a number between 1-20.\n";
			else $player['level'] = $input;
		}

		echo "\n0\tOrange (default)\n1\tRed (turban)\n2\tGreen (woman)\n3\tBlue (safari)\n4\tWhite (Yang)\n5\tPink (Meat Boy)\n6\tYellow (miner)\n7\tBrown (jungle)\n8\tPurple (pirate woman)\n9\tBlack (Van Helsing)\n10\tCyan (furry)\n11\tLime (mariachi)\n12\tDLC1 (eskimo)\n13\tDLC2 (violet woman)\n14\tDLC3 (ninja)\n15\tDLC4 (viking)\n16\tDLC5 (mint man)\n17\tDLC6 (cyclops)\n18\tDLC7 (robot)\n19\tDLC8 (golden monk)\n\n";
		while (@!$player['character']) {
			echo "Character: ";
			$input = trim(fread(STDIN,80));

			if (is_numeric($input) && $input >= 0 && $input <= 19) $player['character'] = $input;
		}

		$query = "INSERT INTO spelunky_game_entry(steamid, leaderboard_id, score, level, character_used) VALUES(" . $player['steamid'] . "," . $player['leaderboard_id'] . ", " . $player['score'] . ", " . $player['level'] . ", " . $player['character'] . ")";

		if (!$db->query($query)) echo "\033[1mError " . $db->errno . ":\033[0m " . $db->error . "\n";
		else echo "\nEntry added";
	}
}
?>
