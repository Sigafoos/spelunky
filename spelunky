#!/usr/bin/php
<?php
/* USAGE
   php spelunky [options]

   chmod 700 spelunky; then:
   ./spelunky [options]

   or for a really fancy time,
   ln -s /path/to/spelunky /usr/bin/spelunky; then:
   spelunky [options]
 */

echo "\n";
if ($argc == 1) {
	if ($argv[0] == "spelunky") $argv[0] = "php spelunky"; // this looks silly but I assure you it makes sense
	else if ($argv[0] == "/usr/bin/spelunky") $argv[0] = "spelunky";

	echo "\t\033[1mUSAGE:\033[0m\n\t" . $argv[0] . " [OPTION] [-d date, --date=date]\n\n";
	echo "\tFor a list of options, use the -h or --help flag\n";
} else if (in_array($argv[1],array("-h","--help","-help","-?"))) {
	echo "\t\033[1mAVAILABLE COMMANDS:\033[0m\n\n";
	echo "\t\t-g, --geeklist\t\tForce update to the geeklist\n\n";
	echo "\t\t-h, --help\t\tDisplay this menu\n\n";
	echo "\t\t-u, --update\t\tForce update (will also update geeklist)\n\n";
	echo "\tOptionally,\n\n";
	echo "\t\t-d [date], --date=[date]\n\n";
	echo "\tThis will specify the date to select. Format can be any accepted by PHP's strtotime() (ie \"2014-02-12\", \"tomorrow\", \"January 4\"). Place quotes around dates with spaces.\n";
} else { // actual commands
	require('functions.php');
	if (@$argv[2] == "-d") $date = $argv[3];
	else if (@preg_match("/^--date=['\"]?(.+)['\"]?$/",$argv[2],$matches)) $date = $matches[1];
	else $date = NULL;

	// NOTE: since this only uses saved data, it will never add a comment. To use fresh data, run with -u
	if (in_array($argv[1],array("-g","--geeklist"))) {
		echo "Updating geeklist...\n";
		$lb = new Leaderboard($date);
		$lb->update_geeklist();
		echo "Updated.\n";

	} else if (in_array($argv[1],array("-u","--update"))) {
		echo "Forcing update...\n";
		$lb = new Leaderboard($date);
		$lb->update();
		echo "All shiny, cap'n\n"; // turn this off or pipe the output into /dev/null
	}
}
?>
